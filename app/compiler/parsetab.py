
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startAND ASC BIGGER BIGGER_EQUAL BY COLNAME COLNUMBER COMMA DATASOURCE DELETE DESC DISTINCT DIVIDE EQUAL FLOATNUMBER FROM INSERT INTO LIKE LIMIT LPAREN MINUS NEGATIVE_INTNUMBER NOT NOTEQUAL OR ORDER PATTERN PERCENT PLUS POSITIVE_INTNUMBER RPAREN SELECT SET SIMICOLON SMALLER SMALLER_EQUAL STRING TIMES UPDATE VALUES WHEREstart : select\n| insert\n| update\n| deleteempty :select : SELECT distinct select_columns FROM DATASOURCE into where order limit SIMICOLONinsert : INSERT INTO DATASOURCE icolumn VALUES insert_values SIMICOLONupdate : UPDATE DATASOURCE SET assigns where SIMICOLONdelete : DELETE FROM DATASOURCE wherelogical :  EQUAL\n| NOTEQUAL\n| BIGGER_EQUAL\n| BIGGER\n| SMALLER_EQUAL\n| SMALLERwhere : WHERE conditionswhere : emptyconditions : LPAREN conditions RPARENconditions : conditions AND conditions\n| conditions OR conditions\n| exp LIKE STRING\n| exp logical expconditions : NOT conditionsexp : STRING\n| COLNAME\n| NEGATIVE_INTNUMBER\n| POSITIVE_INTNUMBER\n| FLOATNUMBERdistinct : DISTINCTdistinct : emptycolumn : COLNUMBER\n| COLNAMEcolumns : columns COMMA columnscolumns : columnselect_columns : TIMESselect_columns : columnsinto : INTO DATASOURCEinto : emptyorder : ORDER BY column wayorder : emptyway : ASC\n| emptyway : DESClimit : LIMIT POSITIVE_INTNUMBERlimit : emptyvalue : STRING\n| NEGATIVE_INTNUMBER\n| POSITIVE_INTNUMBER\n| FLOATNUMBERvalues : values COMMA valuesvalues : valuesingle_values : LPAREN values RPARENinsert_values : insert_values COMMA insert_valuesinsert_values : single_valuesicolumn : LPAREN columns RPARENicolumn : emptyassign : column EQUAL valueassigns : assign COMMA assignsassigns : assign'
    
_lr_action_items = {'SELECT':([0,],[6,]),'INSERT':([0,],[7,]),'UPDATE':([0,],[8,]),'DELETE':([0,],[9,]),'$end':([1,2,3,4,5,24,33,35,43,46,48,49,50,51,59,77,80,84,85,86,87,88,100,],[0,-1,-2,-3,-4,-5,-9,-17,-16,-24,-25,-26,-27,-28,-8,-23,-7,-19,-20,-18,-21,-22,-6,]),'DISTINCT':([6,],[11,]),'TIMES':([6,10,11,12,],[-5,17,-29,-30,]),'COLNUMBER':([6,10,11,12,23,26,28,41,98,],[-5,20,-29,-30,20,20,20,20,20,]),'COLNAME':([6,10,11,12,23,26,28,34,41,44,47,66,67,70,71,72,73,74,75,76,98,],[-5,21,-29,-30,21,21,21,48,21,48,48,48,48,48,-10,-11,-12,-13,-14,-15,21,]),'INTO':([7,36,],[13,53,]),'DATASOURCE':([8,13,15,25,53,],[14,22,24,36,79,]),'FROM':([9,16,17,18,19,20,21,37,],[15,25,-35,-36,-34,-31,-32,-33,]),'SET':([14,],[23,]),'COMMA':([18,19,20,21,31,37,39,55,56,61,62,63,64,65,82,83,92,93,99,],[26,-34,-31,-32,41,26,26,81,-54,-57,-46,-47,-48,-49,94,-51,81,-52,94,]),'RPAREN':([19,20,21,37,39,46,48,49,50,51,62,63,64,65,68,77,82,83,84,85,86,87,88,99,],[-34,-31,-32,-33,58,-24,-25,-26,-27,-28,-46,-47,-48,-49,86,-23,93,-51,-19,-20,-18,-21,-22,-50,]),'EQUAL':([20,21,32,45,46,48,49,50,51,],[-31,-32,42,71,-24,-25,-26,-27,-28,]),'ASC':([20,21,102,],[-31,-32,104,]),'DESC':([20,21,102,],[-31,-32,106,]),'LIMIT':([20,21,35,36,43,46,48,49,50,51,52,54,77,78,79,84,85,86,87,88,89,91,102,103,104,105,106,],[-31,-32,-17,-5,-16,-24,-25,-26,-27,-28,-5,-38,-23,-5,-37,-19,-20,-18,-21,-22,96,-40,-5,-39,-41,-42,-43,]),'SIMICOLON':([20,21,30,31,35,36,40,43,46,48,49,50,51,52,54,55,56,60,61,62,63,64,65,77,78,79,84,85,86,87,88,89,91,92,93,95,97,101,102,103,104,105,106,],[-31,-32,-5,-59,-17,-5,59,-16,-24,-25,-26,-27,-28,-5,-38,80,-54,-58,-57,-46,-47,-48,-49,-23,-5,-37,-19,-20,-18,-21,-22,-5,-40,-53,-52,100,-45,-44,-5,-39,-41,-42,-43,]),'LPAREN':([22,34,38,44,47,66,67,81,],[28,44,57,44,44,44,44,57,]),'VALUES':([22,27,29,58,],[-5,38,-56,-55,]),'WHERE':([24,30,31,36,52,54,60,61,62,63,64,65,79,],[34,34,-59,-5,34,-38,-58,-57,-46,-47,-48,-49,-37,]),'NOT':([34,44,47,66,67,],[47,47,47,47,47,]),'STRING':([34,42,44,47,57,66,67,69,70,71,72,73,74,75,76,94,],[46,62,46,46,62,46,46,87,46,-10,-11,-12,-13,-14,-15,62,]),'NEGATIVE_INTNUMBER':([34,42,44,47,57,66,67,70,71,72,73,74,75,76,94,],[49,63,49,49,63,49,49,49,-10,-11,-12,-13,-14,-15,63,]),'POSITIVE_INTNUMBER':([34,42,44,47,57,66,67,70,71,72,73,74,75,76,94,96,],[50,64,50,50,64,50,50,50,-10,-11,-12,-13,-14,-15,64,101,]),'FLOATNUMBER':([34,42,44,47,57,66,67,70,71,72,73,74,75,76,94,],[51,65,51,51,65,51,51,51,-10,-11,-12,-13,-14,-15,65,]),'ORDER':([35,36,43,46,48,49,50,51,52,54,77,78,79,84,85,86,87,88,],[-17,-5,-16,-24,-25,-26,-27,-28,-5,-38,-23,90,-37,-19,-20,-18,-21,-22,]),'AND':([43,46,48,49,50,51,68,77,84,85,86,87,88,],[66,-24,-25,-26,-27,-28,66,66,66,66,-18,-21,-22,]),'OR':([43,46,48,49,50,51,68,77,84,85,86,87,88,],[67,-24,-25,-26,-27,-28,67,67,67,67,-18,-21,-22,]),'LIKE':([45,46,48,49,50,51,],[69,-24,-25,-26,-27,-28,]),'NOTEQUAL':([45,46,48,49,50,51,],[72,-24,-25,-26,-27,-28,]),'BIGGER_EQUAL':([45,46,48,49,50,51,],[73,-24,-25,-26,-27,-28,]),'BIGGER':([45,46,48,49,50,51,],[74,-24,-25,-26,-27,-28,]),'SMALLER_EQUAL':([45,46,48,49,50,51,],[75,-24,-25,-26,-27,-28,]),'SMALLER':([45,46,48,49,50,51,],[76,-24,-25,-26,-27,-28,]),'BY':([90,],[98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'select':([0,],[2,]),'insert':([0,],[3,]),'update':([0,],[4,]),'delete':([0,],[5,]),'distinct':([6,],[10,]),'empty':([6,22,24,30,36,52,78,89,102,],[12,29,35,35,54,35,91,97,105,]),'select_columns':([10,],[16,]),'columns':([10,26,28,],[18,37,39,]),'column':([10,23,26,28,41,98,],[19,32,19,19,32,102,]),'icolumn':([22,],[27,]),'assigns':([23,41,],[30,60,]),'assign':([23,41,],[31,31,]),'where':([24,30,52,],[33,40,78,]),'conditions':([34,44,47,66,67,],[43,68,77,84,85,]),'exp':([34,44,47,66,67,70,],[45,45,45,45,45,88,]),'into':([36,],[52,]),'insert_values':([38,81,],[55,92,]),'single_values':([38,81,],[56,56,]),'value':([42,57,94,],[61,83,83,]),'logical':([45,],[70,]),'values':([57,94,],[82,99,]),'order':([78,],[89,]),'limit':([89,],[95,]),'way':([102,],[103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> select','start',1,'p_start','yacc.py',5),
  ('start -> insert','start',1,'p_start','yacc.py',6),
  ('start -> update','start',1,'p_start','yacc.py',7),
  ('start -> delete','start',1,'p_start','yacc.py',8),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',13),
  ('select -> SELECT distinct select_columns FROM DATASOURCE into where order limit SIMICOLON','select',10,'p_select','yacc.py',27),
  ('insert -> INSERT INTO DATASOURCE icolumn VALUES insert_values SIMICOLON','insert',7,'p_insert','yacc.py',61),
  ('update -> UPDATE DATASOURCE SET assigns where SIMICOLON','update',6,'p_update','yacc.py',79),
  ('delete -> DELETE FROM DATASOURCE where','delete',4,'p_delete','yacc.py',89),
  ('logical -> EQUAL','logical',1,'p_logical','yacc.py',99),
  ('logical -> NOTEQUAL','logical',1,'p_logical','yacc.py',100),
  ('logical -> BIGGER_EQUAL','logical',1,'p_logical','yacc.py',101),
  ('logical -> BIGGER','logical',1,'p_logical','yacc.py',102),
  ('logical -> SMALLER_EQUAL','logical',1,'p_logical','yacc.py',103),
  ('logical -> SMALLER','logical',1,'p_logical','yacc.py',104),
  ('where -> WHERE conditions','where',2,'p_where','yacc.py',114),
  ('where -> empty','where',1,'p_where_empty','yacc.py',119),
  ('conditions -> LPAREN conditions RPAREN','conditions',3,'p_cond_parens','yacc.py',124),
  ('conditions -> conditions AND conditions','conditions',3,'p_cond_3','yacc.py',129),
  ('conditions -> conditions OR conditions','conditions',3,'p_cond_3','yacc.py',130),
  ('conditions -> exp LIKE STRING','conditions',3,'p_cond_3','yacc.py',131),
  ('conditions -> exp logical exp','conditions',3,'p_cond_3','yacc.py',132),
  ('conditions -> NOT conditions','conditions',2,'p_conditions_not','yacc.py',137),
  ('exp -> STRING','exp',1,'p_exp','yacc.py',147),
  ('exp -> COLNAME','exp',1,'p_exp','yacc.py',148),
  ('exp -> NEGATIVE_INTNUMBER','exp',1,'p_exp','yacc.py',149),
  ('exp -> POSITIVE_INTNUMBER','exp',1,'p_exp','yacc.py',150),
  ('exp -> FLOATNUMBER','exp',1,'p_exp','yacc.py',151),
  ('distinct -> DISTINCT','distinct',1,'p_distinct','yacc.py',162),
  ('distinct -> empty','distinct',1,'p_distinct_empty','yacc.py',167),
  ('column -> COLNUMBER','column',1,'p_column','yacc.py',175),
  ('column -> COLNAME','column',1,'p_column','yacc.py',176),
  ('columns -> columns COMMA columns','columns',3,'p_columns','yacc.py',181),
  ('columns -> column','columns',1,'p_columns_base','yacc.py',188),
  ('select_columns -> TIMES','select_columns',1,'p_select_columns_all','yacc.py',198),
  ('select_columns -> columns','select_columns',1,'p_select_columns','yacc.py',203),
  ('into -> INTO DATASOURCE','into',2,'p_into','yacc.py',213),
  ('into -> empty','into',1,'p_into_empty','yacc.py',218),
  ('order -> ORDER BY column way','order',4,'p_order','yacc.py',227),
  ('order -> empty','order',1,'p_order_empty','yacc.py',232),
  ('way -> ASC','way',1,'p_way_asc','yacc.py',237),
  ('way -> empty','way',1,'p_way_asc','yacc.py',238),
  ('way -> DESC','way',1,'p_way_desc','yacc.py',243),
  ('limit -> LIMIT POSITIVE_INTNUMBER','limit',2,'p_limit','yacc.py',253),
  ('limit -> empty','limit',1,'p_limit_empty','yacc.py',261),
  ('value -> STRING','value',1,'p_value','yacc.py',271),
  ('value -> NEGATIVE_INTNUMBER','value',1,'p_value','yacc.py',272),
  ('value -> POSITIVE_INTNUMBER','value',1,'p_value','yacc.py',273),
  ('value -> FLOATNUMBER','value',1,'p_value','yacc.py',274),
  ('values -> values COMMA values','values',3,'p_values','yacc.py',280),
  ('values -> value','values',1,'p_values_end','yacc.py',292),
  ('single_values -> LPAREN values RPAREN','single_values',3,'p_single_values','yacc.py',297),
  ('insert_values -> insert_values COMMA insert_values','insert_values',3,'p_insert_values','yacc.py',302),
  ('insert_values -> single_values','insert_values',1,'p_insert_values_end','yacc.py',309),
  ('icolumn -> LPAREN columns RPAREN','icolumn',3,'p_icolumn','yacc.py',319),
  ('icolumn -> empty','icolumn',1,'p_icolumn_empty','yacc.py',324),
  ('assign -> column EQUAL value','assign',3,'p_assign','yacc.py',334),
  ('assigns -> assign COMMA assigns','assigns',3,'p_assigns','yacc.py',339),
  ('assigns -> assign','assigns',1,'p_assigns_end','yacc.py',344),
]
