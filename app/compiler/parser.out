Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIVIDE
    MINUS
    PATTERN
    PERCENT
    PLUS

Grammar

Rule 0     S' -> start
Rule 1     start -> select
Rule 2     start -> insert
Rule 3     start -> update
Rule 4     start -> delete
Rule 5     empty -> <empty>
Rule 6     select -> SELECT distinct select_columns FROM DATASOURCE into where order limit_or_tail SIMICOLON
Rule 7     insert -> INSERT INTO DATASOURCE icolumn VALUES insert_values SIMICOLON
Rule 8     update -> UPDATE DATASOURCE SET assigns where SIMICOLON
Rule 9     delete -> DELETE FROM DATASOURCE where
Rule 10    logical -> EQUAL
Rule 11    logical -> NOTEQUAL
Rule 12    logical -> BIGGER_EQUAL
Rule 13    logical -> BIGGER
Rule 14    logical -> SMALLER_EQUAL
Rule 15    logical -> SMALLER
Rule 16    where -> WHERE conditions
Rule 17    where -> empty
Rule 18    conditions -> LPAREN conditions RPAREN
Rule 19    conditions -> conditions AND conditions
Rule 20    conditions -> conditions OR conditions
Rule 21    conditions -> exp LIKE STRING
Rule 22    conditions -> exp logical exp
Rule 23    conditions -> NOT conditions
Rule 24    exp -> column
Rule 25    exp -> STRING
Rule 26    exp -> NUMBER
Rule 27    NUMBER -> NEGATIVE_INTNUMBER
Rule 28    NUMBER -> POSITIVE_INTNUMBER
Rule 29    NUMBER -> FLOATNUMBER
Rule 30    distinct -> DISTINCT
Rule 31    distinct -> empty
Rule 32    column -> COLNUMBER
Rule 33    column -> BRACKETED_COLNAME
Rule 34    column -> SIMPLE_COLNAME
Rule 35    columns -> columns COMMA columns
Rule 36    columns -> column
Rule 37    select_columns -> TIMES
Rule 38    select_columns -> columns
Rule 39    into -> INTO DATASOURCE
Rule 40    into -> empty
Rule 41    order -> ORDER BY column way
Rule 42    order -> empty
Rule 43    way -> ASC
Rule 44    way -> empty
Rule 45    way -> DESC
Rule 46    limit_or_tail -> LIMIT POSITIVE_INTNUMBER
Rule 47    limit_or_tail -> TAIL POSITIVE_INTNUMBER
Rule 48    limit_or_tail -> empty
Rule 49    value -> STRING
Rule 50    value -> NUMBER
Rule 51    values -> values COMMA values
Rule 52    values -> value
Rule 53    single_values -> LPAREN values RPAREN
Rule 54    insert_values -> insert_values COMMA insert_values
Rule 55    insert_values -> single_values
Rule 56    icolumn -> LPAREN columns RPAREN
Rule 57    icolumn -> empty
Rule 58    assign -> column EQUAL value
Rule 59    assigns -> assign COMMA assigns
Rule 60    assigns -> assign

Terminals, with rules where they appear

AND                  : 19
ASC                  : 43
BIGGER               : 13
BIGGER_EQUAL         : 12
BRACKETED_COLNAME    : 33
BY                   : 41
COLNUMBER            : 32
COMMA                : 35 51 54 59
DATASOURCE           : 6 7 8 9 39
DELETE               : 9
DESC                 : 45
DISTINCT             : 30
DIVIDE               : 
EQUAL                : 10 58
FLOATNUMBER          : 29
FROM                 : 6 9
INSERT               : 7
INTO                 : 7 39
LIKE                 : 21
LIMIT                : 46
LPAREN               : 18 53 56
MINUS                : 
NEGATIVE_INTNUMBER   : 27
NOT                  : 23
NOTEQUAL             : 11
OR                   : 20
ORDER                : 41
PATTERN              : 
PERCENT              : 
PLUS                 : 
POSITIVE_INTNUMBER   : 28 46 47
RPAREN               : 18 53 56
SELECT               : 6
SET                  : 8
SIMICOLON            : 6 7 8
SIMPLE_COLNAME       : 34
SMALLER              : 15
SMALLER_EQUAL        : 14
STRING               : 21 25 49
TAIL                 : 47
TIMES                : 37
UPDATE               : 8
VALUES               : 7
WHERE                : 16
error                : 

Nonterminals, with rules where they appear

NUMBER               : 26 50
assign               : 59 60
assigns              : 8 59
column               : 24 36 41 58
columns              : 35 35 38 56
conditions           : 16 18 19 19 20 20 23
delete               : 4
distinct             : 6
empty                : 17 31 40 42 44 48 57
exp                  : 21 22 22
icolumn              : 7
insert               : 2
insert_values        : 7 54 54
into                 : 6
limit_or_tail        : 6
logical              : 22
order                : 6
select               : 1
select_columns       : 6
single_values        : 55
start                : 0
update               : 3
value                : 52 58
values               : 51 51 53
way                  : 41
where                : 6 8 9

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . select
    (2) start -> . insert
    (3) start -> . update
    (4) start -> . delete
    (6) select -> . SELECT distinct select_columns FROM DATASOURCE into where order limit_or_tail SIMICOLON
    (7) insert -> . INSERT INTO DATASOURCE icolumn VALUES insert_values SIMICOLON
    (8) update -> . UPDATE DATASOURCE SET assigns where SIMICOLON
    (9) delete -> . DELETE FROM DATASOURCE where

    SELECT          shift and go to state 6
    INSERT          shift and go to state 7
    UPDATE          shift and go to state 8
    DELETE          shift and go to state 9

    start                          shift and go to state 1
    select                         shift and go to state 2
    insert                         shift and go to state 3
    update                         shift and go to state 4
    delete                         shift and go to state 5

state 1

    (0) S' -> start .



state 2

    (1) start -> select .

    $end            reduce using rule 1 (start -> select .)


state 3

    (2) start -> insert .

    $end            reduce using rule 2 (start -> insert .)


state 4

    (3) start -> update .

    $end            reduce using rule 3 (start -> update .)


state 5

    (4) start -> delete .

    $end            reduce using rule 4 (start -> delete .)


state 6

    (6) select -> SELECT . distinct select_columns FROM DATASOURCE into where order limit_or_tail SIMICOLON
    (30) distinct -> . DISTINCT
    (31) distinct -> . empty
    (5) empty -> .

    DISTINCT        shift and go to state 11
    TIMES           reduce using rule 5 (empty -> .)
    COLNUMBER       reduce using rule 5 (empty -> .)
    BRACKETED_COLNAME reduce using rule 5 (empty -> .)
    SIMPLE_COLNAME  reduce using rule 5 (empty -> .)

    distinct                       shift and go to state 10
    empty                          shift and go to state 12

state 7

    (7) insert -> INSERT . INTO DATASOURCE icolumn VALUES insert_values SIMICOLON

    INTO            shift and go to state 13


state 8

    (8) update -> UPDATE . DATASOURCE SET assigns where SIMICOLON

    DATASOURCE      shift and go to state 14


state 9

    (9) delete -> DELETE . FROM DATASOURCE where

    FROM            shift and go to state 15


state 10

    (6) select -> SELECT distinct . select_columns FROM DATASOURCE into where order limit_or_tail SIMICOLON
    (37) select_columns -> . TIMES
    (38) select_columns -> . columns
    (35) columns -> . columns COMMA columns
    (36) columns -> . column
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME

    TIMES           shift and go to state 17
    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22

    select_columns                 shift and go to state 16
    columns                        shift and go to state 18
    column                         shift and go to state 19

state 11

    (30) distinct -> DISTINCT .

    TIMES           reduce using rule 30 (distinct -> DISTINCT .)
    COLNUMBER       reduce using rule 30 (distinct -> DISTINCT .)
    BRACKETED_COLNAME reduce using rule 30 (distinct -> DISTINCT .)
    SIMPLE_COLNAME  reduce using rule 30 (distinct -> DISTINCT .)


state 12

    (31) distinct -> empty .

    TIMES           reduce using rule 31 (distinct -> empty .)
    COLNUMBER       reduce using rule 31 (distinct -> empty .)
    BRACKETED_COLNAME reduce using rule 31 (distinct -> empty .)
    SIMPLE_COLNAME  reduce using rule 31 (distinct -> empty .)


state 13

    (7) insert -> INSERT INTO . DATASOURCE icolumn VALUES insert_values SIMICOLON

    DATASOURCE      shift and go to state 23


state 14

    (8) update -> UPDATE DATASOURCE . SET assigns where SIMICOLON

    SET             shift and go to state 24


state 15

    (9) delete -> DELETE FROM . DATASOURCE where

    DATASOURCE      shift and go to state 25


state 16

    (6) select -> SELECT distinct select_columns . FROM DATASOURCE into where order limit_or_tail SIMICOLON

    FROM            shift and go to state 26


state 17

    (37) select_columns -> TIMES .

    FROM            reduce using rule 37 (select_columns -> TIMES .)


state 18

    (38) select_columns -> columns .
    (35) columns -> columns . COMMA columns

    FROM            reduce using rule 38 (select_columns -> columns .)
    COMMA           shift and go to state 27


state 19

    (36) columns -> column .

    COMMA           reduce using rule 36 (columns -> column .)
    FROM            reduce using rule 36 (columns -> column .)
    RPAREN          reduce using rule 36 (columns -> column .)


state 20

    (32) column -> COLNUMBER .

    COMMA           reduce using rule 32 (column -> COLNUMBER .)
    FROM            reduce using rule 32 (column -> COLNUMBER .)
    EQUAL           reduce using rule 32 (column -> COLNUMBER .)
    RPAREN          reduce using rule 32 (column -> COLNUMBER .)
    LIKE            reduce using rule 32 (column -> COLNUMBER .)
    NOTEQUAL        reduce using rule 32 (column -> COLNUMBER .)
    BIGGER_EQUAL    reduce using rule 32 (column -> COLNUMBER .)
    BIGGER          reduce using rule 32 (column -> COLNUMBER .)
    SMALLER_EQUAL   reduce using rule 32 (column -> COLNUMBER .)
    SMALLER         reduce using rule 32 (column -> COLNUMBER .)
    AND             reduce using rule 32 (column -> COLNUMBER .)
    OR              reduce using rule 32 (column -> COLNUMBER .)
    $end            reduce using rule 32 (column -> COLNUMBER .)
    SIMICOLON       reduce using rule 32 (column -> COLNUMBER .)
    ORDER           reduce using rule 32 (column -> COLNUMBER .)
    LIMIT           reduce using rule 32 (column -> COLNUMBER .)
    TAIL            reduce using rule 32 (column -> COLNUMBER .)
    ASC             reduce using rule 32 (column -> COLNUMBER .)
    DESC            reduce using rule 32 (column -> COLNUMBER .)


state 21

    (33) column -> BRACKETED_COLNAME .

    COMMA           reduce using rule 33 (column -> BRACKETED_COLNAME .)
    FROM            reduce using rule 33 (column -> BRACKETED_COLNAME .)
    EQUAL           reduce using rule 33 (column -> BRACKETED_COLNAME .)
    RPAREN          reduce using rule 33 (column -> BRACKETED_COLNAME .)
    LIKE            reduce using rule 33 (column -> BRACKETED_COLNAME .)
    NOTEQUAL        reduce using rule 33 (column -> BRACKETED_COLNAME .)
    BIGGER_EQUAL    reduce using rule 33 (column -> BRACKETED_COLNAME .)
    BIGGER          reduce using rule 33 (column -> BRACKETED_COLNAME .)
    SMALLER_EQUAL   reduce using rule 33 (column -> BRACKETED_COLNAME .)
    SMALLER         reduce using rule 33 (column -> BRACKETED_COLNAME .)
    AND             reduce using rule 33 (column -> BRACKETED_COLNAME .)
    OR              reduce using rule 33 (column -> BRACKETED_COLNAME .)
    $end            reduce using rule 33 (column -> BRACKETED_COLNAME .)
    SIMICOLON       reduce using rule 33 (column -> BRACKETED_COLNAME .)
    ORDER           reduce using rule 33 (column -> BRACKETED_COLNAME .)
    LIMIT           reduce using rule 33 (column -> BRACKETED_COLNAME .)
    TAIL            reduce using rule 33 (column -> BRACKETED_COLNAME .)
    ASC             reduce using rule 33 (column -> BRACKETED_COLNAME .)
    DESC            reduce using rule 33 (column -> BRACKETED_COLNAME .)


state 22

    (34) column -> SIMPLE_COLNAME .

    COMMA           reduce using rule 34 (column -> SIMPLE_COLNAME .)
    FROM            reduce using rule 34 (column -> SIMPLE_COLNAME .)
    EQUAL           reduce using rule 34 (column -> SIMPLE_COLNAME .)
    RPAREN          reduce using rule 34 (column -> SIMPLE_COLNAME .)
    LIKE            reduce using rule 34 (column -> SIMPLE_COLNAME .)
    NOTEQUAL        reduce using rule 34 (column -> SIMPLE_COLNAME .)
    BIGGER_EQUAL    reduce using rule 34 (column -> SIMPLE_COLNAME .)
    BIGGER          reduce using rule 34 (column -> SIMPLE_COLNAME .)
    SMALLER_EQUAL   reduce using rule 34 (column -> SIMPLE_COLNAME .)
    SMALLER         reduce using rule 34 (column -> SIMPLE_COLNAME .)
    AND             reduce using rule 34 (column -> SIMPLE_COLNAME .)
    OR              reduce using rule 34 (column -> SIMPLE_COLNAME .)
    $end            reduce using rule 34 (column -> SIMPLE_COLNAME .)
    SIMICOLON       reduce using rule 34 (column -> SIMPLE_COLNAME .)
    ORDER           reduce using rule 34 (column -> SIMPLE_COLNAME .)
    LIMIT           reduce using rule 34 (column -> SIMPLE_COLNAME .)
    TAIL            reduce using rule 34 (column -> SIMPLE_COLNAME .)
    ASC             reduce using rule 34 (column -> SIMPLE_COLNAME .)
    DESC            reduce using rule 34 (column -> SIMPLE_COLNAME .)


state 23

    (7) insert -> INSERT INTO DATASOURCE . icolumn VALUES insert_values SIMICOLON
    (56) icolumn -> . LPAREN columns RPAREN
    (57) icolumn -> . empty
    (5) empty -> .

    LPAREN          shift and go to state 29
    VALUES          reduce using rule 5 (empty -> .)

    icolumn                        shift and go to state 28
    empty                          shift and go to state 30

state 24

    (8) update -> UPDATE DATASOURCE SET . assigns where SIMICOLON
    (59) assigns -> . assign COMMA assigns
    (60) assigns -> . assign
    (58) assign -> . column EQUAL value
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME

    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22

    assigns                        shift and go to state 31
    assign                         shift and go to state 32
    column                         shift and go to state 33

state 25

    (9) delete -> DELETE FROM DATASOURCE . where
    (16) where -> . WHERE conditions
    (17) where -> . empty
    (5) empty -> .

    WHERE           shift and go to state 35
    $end            reduce using rule 5 (empty -> .)

    where                          shift and go to state 34
    empty                          shift and go to state 36

state 26

    (6) select -> SELECT distinct select_columns FROM . DATASOURCE into where order limit_or_tail SIMICOLON

    DATASOURCE      shift and go to state 37


state 27

    (35) columns -> columns COMMA . columns
    (35) columns -> . columns COMMA columns
    (36) columns -> . column
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME

    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22

    columns                        shift and go to state 38
    column                         shift and go to state 19

state 28

    (7) insert -> INSERT INTO DATASOURCE icolumn . VALUES insert_values SIMICOLON

    VALUES          shift and go to state 39


state 29

    (56) icolumn -> LPAREN . columns RPAREN
    (35) columns -> . columns COMMA columns
    (36) columns -> . column
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME

    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22

    columns                        shift and go to state 40
    column                         shift and go to state 19

state 30

    (57) icolumn -> empty .

    VALUES          reduce using rule 57 (icolumn -> empty .)


state 31

    (8) update -> UPDATE DATASOURCE SET assigns . where SIMICOLON
    (16) where -> . WHERE conditions
    (17) where -> . empty
    (5) empty -> .

    WHERE           shift and go to state 35
    SIMICOLON       reduce using rule 5 (empty -> .)

    where                          shift and go to state 41
    empty                          shift and go to state 36

state 32

    (59) assigns -> assign . COMMA assigns
    (60) assigns -> assign .

    COMMA           shift and go to state 42
    WHERE           reduce using rule 60 (assigns -> assign .)
    SIMICOLON       reduce using rule 60 (assigns -> assign .)


state 33

    (58) assign -> column . EQUAL value

    EQUAL           shift and go to state 43


state 34

    (9) delete -> DELETE FROM DATASOURCE where .

    $end            reduce using rule 9 (delete -> DELETE FROM DATASOURCE where .)


state 35

    (16) where -> WHERE . conditions
    (18) conditions -> . LPAREN conditions RPAREN
    (19) conditions -> . conditions AND conditions
    (20) conditions -> . conditions OR conditions
    (21) conditions -> . exp LIKE STRING
    (22) conditions -> . exp logical exp
    (23) conditions -> . NOT conditions
    (24) exp -> . column
    (25) exp -> . STRING
    (26) exp -> . NUMBER
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME
    (27) NUMBER -> . NEGATIVE_INTNUMBER
    (28) NUMBER -> . POSITIVE_INTNUMBER
    (29) NUMBER -> . FLOATNUMBER

    LPAREN          shift and go to state 45
    NOT             shift and go to state 48
    STRING          shift and go to state 47
    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22
    NEGATIVE_INTNUMBER shift and go to state 51
    POSITIVE_INTNUMBER shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    conditions                     shift and go to state 44
    exp                            shift and go to state 46
    column                         shift and go to state 49
    NUMBER                         shift and go to state 50

state 36

    (17) where -> empty .

    $end            reduce using rule 17 (where -> empty .)
    SIMICOLON       reduce using rule 17 (where -> empty .)
    ORDER           reduce using rule 17 (where -> empty .)
    LIMIT           reduce using rule 17 (where -> empty .)
    TAIL            reduce using rule 17 (where -> empty .)


state 37

    (6) select -> SELECT distinct select_columns FROM DATASOURCE . into where order limit_or_tail SIMICOLON
    (39) into -> . INTO DATASOURCE
    (40) into -> . empty
    (5) empty -> .

    INTO            shift and go to state 55
    WHERE           reduce using rule 5 (empty -> .)
    ORDER           reduce using rule 5 (empty -> .)
    LIMIT           reduce using rule 5 (empty -> .)
    TAIL            reduce using rule 5 (empty -> .)
    SIMICOLON       reduce using rule 5 (empty -> .)

    into                           shift and go to state 54
    empty                          shift and go to state 56

state 38

    (35) columns -> columns COMMA columns .
    (35) columns -> columns . COMMA columns

  ! shift/reduce conflict for COMMA resolved as shift
    FROM            reduce using rule 35 (columns -> columns COMMA columns .)
    RPAREN          reduce using rule 35 (columns -> columns COMMA columns .)
    COMMA           shift and go to state 27

  ! COMMA           [ reduce using rule 35 (columns -> columns COMMA columns .) ]


state 39

    (7) insert -> INSERT INTO DATASOURCE icolumn VALUES . insert_values SIMICOLON
    (54) insert_values -> . insert_values COMMA insert_values
    (55) insert_values -> . single_values
    (53) single_values -> . LPAREN values RPAREN

    LPAREN          shift and go to state 59

    insert_values                  shift and go to state 57
    single_values                  shift and go to state 58

state 40

    (56) icolumn -> LPAREN columns . RPAREN
    (35) columns -> columns . COMMA columns

    RPAREN          shift and go to state 60
    COMMA           shift and go to state 27


state 41

    (8) update -> UPDATE DATASOURCE SET assigns where . SIMICOLON

    SIMICOLON       shift and go to state 61


state 42

    (59) assigns -> assign COMMA . assigns
    (59) assigns -> . assign COMMA assigns
    (60) assigns -> . assign
    (58) assign -> . column EQUAL value
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME

    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22

    assign                         shift and go to state 32
    assigns                        shift and go to state 62
    column                         shift and go to state 33

state 43

    (58) assign -> column EQUAL . value
    (49) value -> . STRING
    (50) value -> . NUMBER
    (27) NUMBER -> . NEGATIVE_INTNUMBER
    (28) NUMBER -> . POSITIVE_INTNUMBER
    (29) NUMBER -> . FLOATNUMBER

    STRING          shift and go to state 64
    NEGATIVE_INTNUMBER shift and go to state 51
    POSITIVE_INTNUMBER shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    value                          shift and go to state 63
    NUMBER                         shift and go to state 65

state 44

    (16) where -> WHERE conditions .
    (19) conditions -> conditions . AND conditions
    (20) conditions -> conditions . OR conditions

    $end            reduce using rule 16 (where -> WHERE conditions .)
    SIMICOLON       reduce using rule 16 (where -> WHERE conditions .)
    ORDER           reduce using rule 16 (where -> WHERE conditions .)
    LIMIT           reduce using rule 16 (where -> WHERE conditions .)
    TAIL            reduce using rule 16 (where -> WHERE conditions .)
    AND             shift and go to state 66
    OR              shift and go to state 67


state 45

    (18) conditions -> LPAREN . conditions RPAREN
    (18) conditions -> . LPAREN conditions RPAREN
    (19) conditions -> . conditions AND conditions
    (20) conditions -> . conditions OR conditions
    (21) conditions -> . exp LIKE STRING
    (22) conditions -> . exp logical exp
    (23) conditions -> . NOT conditions
    (24) exp -> . column
    (25) exp -> . STRING
    (26) exp -> . NUMBER
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME
    (27) NUMBER -> . NEGATIVE_INTNUMBER
    (28) NUMBER -> . POSITIVE_INTNUMBER
    (29) NUMBER -> . FLOATNUMBER

    LPAREN          shift and go to state 45
    NOT             shift and go to state 48
    STRING          shift and go to state 47
    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22
    NEGATIVE_INTNUMBER shift and go to state 51
    POSITIVE_INTNUMBER shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    conditions                     shift and go to state 68
    exp                            shift and go to state 46
    column                         shift and go to state 49
    NUMBER                         shift and go to state 50

state 46

    (21) conditions -> exp . LIKE STRING
    (22) conditions -> exp . logical exp
    (10) logical -> . EQUAL
    (11) logical -> . NOTEQUAL
    (12) logical -> . BIGGER_EQUAL
    (13) logical -> . BIGGER
    (14) logical -> . SMALLER_EQUAL
    (15) logical -> . SMALLER

    LIKE            shift and go to state 69
    EQUAL           shift and go to state 71
    NOTEQUAL        shift and go to state 72
    BIGGER_EQUAL    shift and go to state 73
    BIGGER          shift and go to state 74
    SMALLER_EQUAL   shift and go to state 75
    SMALLER         shift and go to state 76

    logical                        shift and go to state 70

state 47

    (25) exp -> STRING .

    LIKE            reduce using rule 25 (exp -> STRING .)
    EQUAL           reduce using rule 25 (exp -> STRING .)
    NOTEQUAL        reduce using rule 25 (exp -> STRING .)
    BIGGER_EQUAL    reduce using rule 25 (exp -> STRING .)
    BIGGER          reduce using rule 25 (exp -> STRING .)
    SMALLER_EQUAL   reduce using rule 25 (exp -> STRING .)
    SMALLER         reduce using rule 25 (exp -> STRING .)
    AND             reduce using rule 25 (exp -> STRING .)
    OR              reduce using rule 25 (exp -> STRING .)
    $end            reduce using rule 25 (exp -> STRING .)
    SIMICOLON       reduce using rule 25 (exp -> STRING .)
    ORDER           reduce using rule 25 (exp -> STRING .)
    LIMIT           reduce using rule 25 (exp -> STRING .)
    TAIL            reduce using rule 25 (exp -> STRING .)
    RPAREN          reduce using rule 25 (exp -> STRING .)


state 48

    (23) conditions -> NOT . conditions
    (18) conditions -> . LPAREN conditions RPAREN
    (19) conditions -> . conditions AND conditions
    (20) conditions -> . conditions OR conditions
    (21) conditions -> . exp LIKE STRING
    (22) conditions -> . exp logical exp
    (23) conditions -> . NOT conditions
    (24) exp -> . column
    (25) exp -> . STRING
    (26) exp -> . NUMBER
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME
    (27) NUMBER -> . NEGATIVE_INTNUMBER
    (28) NUMBER -> . POSITIVE_INTNUMBER
    (29) NUMBER -> . FLOATNUMBER

    LPAREN          shift and go to state 45
    NOT             shift and go to state 48
    STRING          shift and go to state 47
    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22
    NEGATIVE_INTNUMBER shift and go to state 51
    POSITIVE_INTNUMBER shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    conditions                     shift and go to state 77
    exp                            shift and go to state 46
    column                         shift and go to state 49
    NUMBER                         shift and go to state 50

state 49

    (24) exp -> column .

    LIKE            reduce using rule 24 (exp -> column .)
    EQUAL           reduce using rule 24 (exp -> column .)
    NOTEQUAL        reduce using rule 24 (exp -> column .)
    BIGGER_EQUAL    reduce using rule 24 (exp -> column .)
    BIGGER          reduce using rule 24 (exp -> column .)
    SMALLER_EQUAL   reduce using rule 24 (exp -> column .)
    SMALLER         reduce using rule 24 (exp -> column .)
    AND             reduce using rule 24 (exp -> column .)
    OR              reduce using rule 24 (exp -> column .)
    $end            reduce using rule 24 (exp -> column .)
    SIMICOLON       reduce using rule 24 (exp -> column .)
    ORDER           reduce using rule 24 (exp -> column .)
    LIMIT           reduce using rule 24 (exp -> column .)
    TAIL            reduce using rule 24 (exp -> column .)
    RPAREN          reduce using rule 24 (exp -> column .)


state 50

    (26) exp -> NUMBER .

    LIKE            reduce using rule 26 (exp -> NUMBER .)
    EQUAL           reduce using rule 26 (exp -> NUMBER .)
    NOTEQUAL        reduce using rule 26 (exp -> NUMBER .)
    BIGGER_EQUAL    reduce using rule 26 (exp -> NUMBER .)
    BIGGER          reduce using rule 26 (exp -> NUMBER .)
    SMALLER_EQUAL   reduce using rule 26 (exp -> NUMBER .)
    SMALLER         reduce using rule 26 (exp -> NUMBER .)
    AND             reduce using rule 26 (exp -> NUMBER .)
    OR              reduce using rule 26 (exp -> NUMBER .)
    $end            reduce using rule 26 (exp -> NUMBER .)
    SIMICOLON       reduce using rule 26 (exp -> NUMBER .)
    ORDER           reduce using rule 26 (exp -> NUMBER .)
    LIMIT           reduce using rule 26 (exp -> NUMBER .)
    TAIL            reduce using rule 26 (exp -> NUMBER .)
    RPAREN          reduce using rule 26 (exp -> NUMBER .)


state 51

    (27) NUMBER -> NEGATIVE_INTNUMBER .

    LIKE            reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    EQUAL           reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    NOTEQUAL        reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    BIGGER_EQUAL    reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    BIGGER          reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    SMALLER_EQUAL   reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    SMALLER         reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    COMMA           reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    WHERE           reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    SIMICOLON       reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    RPAREN          reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    AND             reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    OR              reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    $end            reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    ORDER           reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    LIMIT           reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)
    TAIL            reduce using rule 27 (NUMBER -> NEGATIVE_INTNUMBER .)


state 52

    (28) NUMBER -> POSITIVE_INTNUMBER .

    LIKE            reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    EQUAL           reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    NOTEQUAL        reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    BIGGER_EQUAL    reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    BIGGER          reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    SMALLER_EQUAL   reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    SMALLER         reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    COMMA           reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    WHERE           reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    SIMICOLON       reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    RPAREN          reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    AND             reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    OR              reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    $end            reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    ORDER           reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    LIMIT           reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)
    TAIL            reduce using rule 28 (NUMBER -> POSITIVE_INTNUMBER .)


state 53

    (29) NUMBER -> FLOATNUMBER .

    LIKE            reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    EQUAL           reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    NOTEQUAL        reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    BIGGER_EQUAL    reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    BIGGER          reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    SMALLER_EQUAL   reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    SMALLER         reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    COMMA           reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    WHERE           reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    SIMICOLON       reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    RPAREN          reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    AND             reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    OR              reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    $end            reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    ORDER           reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    LIMIT           reduce using rule 29 (NUMBER -> FLOATNUMBER .)
    TAIL            reduce using rule 29 (NUMBER -> FLOATNUMBER .)


state 54

    (6) select -> SELECT distinct select_columns FROM DATASOURCE into . where order limit_or_tail SIMICOLON
    (16) where -> . WHERE conditions
    (17) where -> . empty
    (5) empty -> .

    WHERE           shift and go to state 35
    ORDER           reduce using rule 5 (empty -> .)
    LIMIT           reduce using rule 5 (empty -> .)
    TAIL            reduce using rule 5 (empty -> .)
    SIMICOLON       reduce using rule 5 (empty -> .)

    where                          shift and go to state 78
    empty                          shift and go to state 36

state 55

    (39) into -> INTO . DATASOURCE

    DATASOURCE      shift and go to state 79


state 56

    (40) into -> empty .

    WHERE           reduce using rule 40 (into -> empty .)
    ORDER           reduce using rule 40 (into -> empty .)
    LIMIT           reduce using rule 40 (into -> empty .)
    TAIL            reduce using rule 40 (into -> empty .)
    SIMICOLON       reduce using rule 40 (into -> empty .)


state 57

    (7) insert -> INSERT INTO DATASOURCE icolumn VALUES insert_values . SIMICOLON
    (54) insert_values -> insert_values . COMMA insert_values

    SIMICOLON       shift and go to state 80
    COMMA           shift and go to state 81


state 58

    (55) insert_values -> single_values .

    SIMICOLON       reduce using rule 55 (insert_values -> single_values .)
    COMMA           reduce using rule 55 (insert_values -> single_values .)


state 59

    (53) single_values -> LPAREN . values RPAREN
    (51) values -> . values COMMA values
    (52) values -> . value
    (49) value -> . STRING
    (50) value -> . NUMBER
    (27) NUMBER -> . NEGATIVE_INTNUMBER
    (28) NUMBER -> . POSITIVE_INTNUMBER
    (29) NUMBER -> . FLOATNUMBER

    STRING          shift and go to state 64
    NEGATIVE_INTNUMBER shift and go to state 51
    POSITIVE_INTNUMBER shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    values                         shift and go to state 82
    value                          shift and go to state 83
    NUMBER                         shift and go to state 65

state 60

    (56) icolumn -> LPAREN columns RPAREN .

    VALUES          reduce using rule 56 (icolumn -> LPAREN columns RPAREN .)


state 61

    (8) update -> UPDATE DATASOURCE SET assigns where SIMICOLON .

    $end            reduce using rule 8 (update -> UPDATE DATASOURCE SET assigns where SIMICOLON .)


state 62

    (59) assigns -> assign COMMA assigns .

    WHERE           reduce using rule 59 (assigns -> assign COMMA assigns .)
    SIMICOLON       reduce using rule 59 (assigns -> assign COMMA assigns .)


state 63

    (58) assign -> column EQUAL value .

    COMMA           reduce using rule 58 (assign -> column EQUAL value .)
    WHERE           reduce using rule 58 (assign -> column EQUAL value .)
    SIMICOLON       reduce using rule 58 (assign -> column EQUAL value .)


state 64

    (49) value -> STRING .

    COMMA           reduce using rule 49 (value -> STRING .)
    WHERE           reduce using rule 49 (value -> STRING .)
    SIMICOLON       reduce using rule 49 (value -> STRING .)
    RPAREN          reduce using rule 49 (value -> STRING .)


state 65

    (50) value -> NUMBER .

    COMMA           reduce using rule 50 (value -> NUMBER .)
    WHERE           reduce using rule 50 (value -> NUMBER .)
    SIMICOLON       reduce using rule 50 (value -> NUMBER .)
    RPAREN          reduce using rule 50 (value -> NUMBER .)


state 66

    (19) conditions -> conditions AND . conditions
    (18) conditions -> . LPAREN conditions RPAREN
    (19) conditions -> . conditions AND conditions
    (20) conditions -> . conditions OR conditions
    (21) conditions -> . exp LIKE STRING
    (22) conditions -> . exp logical exp
    (23) conditions -> . NOT conditions
    (24) exp -> . column
    (25) exp -> . STRING
    (26) exp -> . NUMBER
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME
    (27) NUMBER -> . NEGATIVE_INTNUMBER
    (28) NUMBER -> . POSITIVE_INTNUMBER
    (29) NUMBER -> . FLOATNUMBER

    LPAREN          shift and go to state 45
    NOT             shift and go to state 48
    STRING          shift and go to state 47
    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22
    NEGATIVE_INTNUMBER shift and go to state 51
    POSITIVE_INTNUMBER shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    conditions                     shift and go to state 84
    exp                            shift and go to state 46
    column                         shift and go to state 49
    NUMBER                         shift and go to state 50

state 67

    (20) conditions -> conditions OR . conditions
    (18) conditions -> . LPAREN conditions RPAREN
    (19) conditions -> . conditions AND conditions
    (20) conditions -> . conditions OR conditions
    (21) conditions -> . exp LIKE STRING
    (22) conditions -> . exp logical exp
    (23) conditions -> . NOT conditions
    (24) exp -> . column
    (25) exp -> . STRING
    (26) exp -> . NUMBER
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME
    (27) NUMBER -> . NEGATIVE_INTNUMBER
    (28) NUMBER -> . POSITIVE_INTNUMBER
    (29) NUMBER -> . FLOATNUMBER

    LPAREN          shift and go to state 45
    NOT             shift and go to state 48
    STRING          shift and go to state 47
    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22
    NEGATIVE_INTNUMBER shift and go to state 51
    POSITIVE_INTNUMBER shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    conditions                     shift and go to state 85
    exp                            shift and go to state 46
    column                         shift and go to state 49
    NUMBER                         shift and go to state 50

state 68

    (18) conditions -> LPAREN conditions . RPAREN
    (19) conditions -> conditions . AND conditions
    (20) conditions -> conditions . OR conditions

    RPAREN          shift and go to state 86
    AND             shift and go to state 66
    OR              shift and go to state 67


state 69

    (21) conditions -> exp LIKE . STRING

    STRING          shift and go to state 87


state 70

    (22) conditions -> exp logical . exp
    (24) exp -> . column
    (25) exp -> . STRING
    (26) exp -> . NUMBER
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME
    (27) NUMBER -> . NEGATIVE_INTNUMBER
    (28) NUMBER -> . POSITIVE_INTNUMBER
    (29) NUMBER -> . FLOATNUMBER

    STRING          shift and go to state 47
    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22
    NEGATIVE_INTNUMBER shift and go to state 51
    POSITIVE_INTNUMBER shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    exp                            shift and go to state 88
    column                         shift and go to state 49
    NUMBER                         shift and go to state 50

state 71

    (10) logical -> EQUAL .

    STRING          reduce using rule 10 (logical -> EQUAL .)
    COLNUMBER       reduce using rule 10 (logical -> EQUAL .)
    BRACKETED_COLNAME reduce using rule 10 (logical -> EQUAL .)
    SIMPLE_COLNAME  reduce using rule 10 (logical -> EQUAL .)
    NEGATIVE_INTNUMBER reduce using rule 10 (logical -> EQUAL .)
    POSITIVE_INTNUMBER reduce using rule 10 (logical -> EQUAL .)
    FLOATNUMBER     reduce using rule 10 (logical -> EQUAL .)


state 72

    (11) logical -> NOTEQUAL .

    STRING          reduce using rule 11 (logical -> NOTEQUAL .)
    COLNUMBER       reduce using rule 11 (logical -> NOTEQUAL .)
    BRACKETED_COLNAME reduce using rule 11 (logical -> NOTEQUAL .)
    SIMPLE_COLNAME  reduce using rule 11 (logical -> NOTEQUAL .)
    NEGATIVE_INTNUMBER reduce using rule 11 (logical -> NOTEQUAL .)
    POSITIVE_INTNUMBER reduce using rule 11 (logical -> NOTEQUAL .)
    FLOATNUMBER     reduce using rule 11 (logical -> NOTEQUAL .)


state 73

    (12) logical -> BIGGER_EQUAL .

    STRING          reduce using rule 12 (logical -> BIGGER_EQUAL .)
    COLNUMBER       reduce using rule 12 (logical -> BIGGER_EQUAL .)
    BRACKETED_COLNAME reduce using rule 12 (logical -> BIGGER_EQUAL .)
    SIMPLE_COLNAME  reduce using rule 12 (logical -> BIGGER_EQUAL .)
    NEGATIVE_INTNUMBER reduce using rule 12 (logical -> BIGGER_EQUAL .)
    POSITIVE_INTNUMBER reduce using rule 12 (logical -> BIGGER_EQUAL .)
    FLOATNUMBER     reduce using rule 12 (logical -> BIGGER_EQUAL .)


state 74

    (13) logical -> BIGGER .

    STRING          reduce using rule 13 (logical -> BIGGER .)
    COLNUMBER       reduce using rule 13 (logical -> BIGGER .)
    BRACKETED_COLNAME reduce using rule 13 (logical -> BIGGER .)
    SIMPLE_COLNAME  reduce using rule 13 (logical -> BIGGER .)
    NEGATIVE_INTNUMBER reduce using rule 13 (logical -> BIGGER .)
    POSITIVE_INTNUMBER reduce using rule 13 (logical -> BIGGER .)
    FLOATNUMBER     reduce using rule 13 (logical -> BIGGER .)


state 75

    (14) logical -> SMALLER_EQUAL .

    STRING          reduce using rule 14 (logical -> SMALLER_EQUAL .)
    COLNUMBER       reduce using rule 14 (logical -> SMALLER_EQUAL .)
    BRACKETED_COLNAME reduce using rule 14 (logical -> SMALLER_EQUAL .)
    SIMPLE_COLNAME  reduce using rule 14 (logical -> SMALLER_EQUAL .)
    NEGATIVE_INTNUMBER reduce using rule 14 (logical -> SMALLER_EQUAL .)
    POSITIVE_INTNUMBER reduce using rule 14 (logical -> SMALLER_EQUAL .)
    FLOATNUMBER     reduce using rule 14 (logical -> SMALLER_EQUAL .)


state 76

    (15) logical -> SMALLER .

    STRING          reduce using rule 15 (logical -> SMALLER .)
    COLNUMBER       reduce using rule 15 (logical -> SMALLER .)
    BRACKETED_COLNAME reduce using rule 15 (logical -> SMALLER .)
    SIMPLE_COLNAME  reduce using rule 15 (logical -> SMALLER .)
    NEGATIVE_INTNUMBER reduce using rule 15 (logical -> SMALLER .)
    POSITIVE_INTNUMBER reduce using rule 15 (logical -> SMALLER .)
    FLOATNUMBER     reduce using rule 15 (logical -> SMALLER .)


state 77

    (23) conditions -> NOT conditions .
    (19) conditions -> conditions . AND conditions
    (20) conditions -> conditions . OR conditions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 23 (conditions -> NOT conditions .)
    SIMICOLON       reduce using rule 23 (conditions -> NOT conditions .)
    ORDER           reduce using rule 23 (conditions -> NOT conditions .)
    LIMIT           reduce using rule 23 (conditions -> NOT conditions .)
    TAIL            reduce using rule 23 (conditions -> NOT conditions .)
    RPAREN          reduce using rule 23 (conditions -> NOT conditions .)
    AND             shift and go to state 66
    OR              shift and go to state 67

  ! AND             [ reduce using rule 23 (conditions -> NOT conditions .) ]
  ! OR              [ reduce using rule 23 (conditions -> NOT conditions .) ]


state 78

    (6) select -> SELECT distinct select_columns FROM DATASOURCE into where . order limit_or_tail SIMICOLON
    (41) order -> . ORDER BY column way
    (42) order -> . empty
    (5) empty -> .

    ORDER           shift and go to state 90
    LIMIT           reduce using rule 5 (empty -> .)
    TAIL            reduce using rule 5 (empty -> .)
    SIMICOLON       reduce using rule 5 (empty -> .)

    order                          shift and go to state 89
    empty                          shift and go to state 91

state 79

    (39) into -> INTO DATASOURCE .

    WHERE           reduce using rule 39 (into -> INTO DATASOURCE .)
    ORDER           reduce using rule 39 (into -> INTO DATASOURCE .)
    LIMIT           reduce using rule 39 (into -> INTO DATASOURCE .)
    TAIL            reduce using rule 39 (into -> INTO DATASOURCE .)
    SIMICOLON       reduce using rule 39 (into -> INTO DATASOURCE .)


state 80

    (7) insert -> INSERT INTO DATASOURCE icolumn VALUES insert_values SIMICOLON .

    $end            reduce using rule 7 (insert -> INSERT INTO DATASOURCE icolumn VALUES insert_values SIMICOLON .)


state 81

    (54) insert_values -> insert_values COMMA . insert_values
    (54) insert_values -> . insert_values COMMA insert_values
    (55) insert_values -> . single_values
    (53) single_values -> . LPAREN values RPAREN

    LPAREN          shift and go to state 59

    insert_values                  shift and go to state 92
    single_values                  shift and go to state 58

state 82

    (53) single_values -> LPAREN values . RPAREN
    (51) values -> values . COMMA values

    RPAREN          shift and go to state 93
    COMMA           shift and go to state 94


state 83

    (52) values -> value .

    RPAREN          reduce using rule 52 (values -> value .)
    COMMA           reduce using rule 52 (values -> value .)


state 84

    (19) conditions -> conditions AND conditions .
    (19) conditions -> conditions . AND conditions
    (20) conditions -> conditions . OR conditions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 19 (conditions -> conditions AND conditions .)
    SIMICOLON       reduce using rule 19 (conditions -> conditions AND conditions .)
    ORDER           reduce using rule 19 (conditions -> conditions AND conditions .)
    LIMIT           reduce using rule 19 (conditions -> conditions AND conditions .)
    TAIL            reduce using rule 19 (conditions -> conditions AND conditions .)
    RPAREN          reduce using rule 19 (conditions -> conditions AND conditions .)
    AND             shift and go to state 66
    OR              shift and go to state 67

  ! AND             [ reduce using rule 19 (conditions -> conditions AND conditions .) ]
  ! OR              [ reduce using rule 19 (conditions -> conditions AND conditions .) ]


state 85

    (20) conditions -> conditions OR conditions .
    (19) conditions -> conditions . AND conditions
    (20) conditions -> conditions . OR conditions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 20 (conditions -> conditions OR conditions .)
    SIMICOLON       reduce using rule 20 (conditions -> conditions OR conditions .)
    ORDER           reduce using rule 20 (conditions -> conditions OR conditions .)
    LIMIT           reduce using rule 20 (conditions -> conditions OR conditions .)
    TAIL            reduce using rule 20 (conditions -> conditions OR conditions .)
    RPAREN          reduce using rule 20 (conditions -> conditions OR conditions .)
    AND             shift and go to state 66
    OR              shift and go to state 67

  ! AND             [ reduce using rule 20 (conditions -> conditions OR conditions .) ]
  ! OR              [ reduce using rule 20 (conditions -> conditions OR conditions .) ]


state 86

    (18) conditions -> LPAREN conditions RPAREN .

    AND             reduce using rule 18 (conditions -> LPAREN conditions RPAREN .)
    OR              reduce using rule 18 (conditions -> LPAREN conditions RPAREN .)
    $end            reduce using rule 18 (conditions -> LPAREN conditions RPAREN .)
    SIMICOLON       reduce using rule 18 (conditions -> LPAREN conditions RPAREN .)
    ORDER           reduce using rule 18 (conditions -> LPAREN conditions RPAREN .)
    LIMIT           reduce using rule 18 (conditions -> LPAREN conditions RPAREN .)
    TAIL            reduce using rule 18 (conditions -> LPAREN conditions RPAREN .)
    RPAREN          reduce using rule 18 (conditions -> LPAREN conditions RPAREN .)


state 87

    (21) conditions -> exp LIKE STRING .

    AND             reduce using rule 21 (conditions -> exp LIKE STRING .)
    OR              reduce using rule 21 (conditions -> exp LIKE STRING .)
    $end            reduce using rule 21 (conditions -> exp LIKE STRING .)
    SIMICOLON       reduce using rule 21 (conditions -> exp LIKE STRING .)
    ORDER           reduce using rule 21 (conditions -> exp LIKE STRING .)
    LIMIT           reduce using rule 21 (conditions -> exp LIKE STRING .)
    TAIL            reduce using rule 21 (conditions -> exp LIKE STRING .)
    RPAREN          reduce using rule 21 (conditions -> exp LIKE STRING .)


state 88

    (22) conditions -> exp logical exp .

    AND             reduce using rule 22 (conditions -> exp logical exp .)
    OR              reduce using rule 22 (conditions -> exp logical exp .)
    $end            reduce using rule 22 (conditions -> exp logical exp .)
    SIMICOLON       reduce using rule 22 (conditions -> exp logical exp .)
    ORDER           reduce using rule 22 (conditions -> exp logical exp .)
    LIMIT           reduce using rule 22 (conditions -> exp logical exp .)
    TAIL            reduce using rule 22 (conditions -> exp logical exp .)
    RPAREN          reduce using rule 22 (conditions -> exp logical exp .)


state 89

    (6) select -> SELECT distinct select_columns FROM DATASOURCE into where order . limit_or_tail SIMICOLON
    (46) limit_or_tail -> . LIMIT POSITIVE_INTNUMBER
    (47) limit_or_tail -> . TAIL POSITIVE_INTNUMBER
    (48) limit_or_tail -> . empty
    (5) empty -> .

    LIMIT           shift and go to state 96
    TAIL            shift and go to state 97
    SIMICOLON       reduce using rule 5 (empty -> .)

    limit_or_tail                  shift and go to state 95
    empty                          shift and go to state 98

state 90

    (41) order -> ORDER . BY column way

    BY              shift and go to state 99


state 91

    (42) order -> empty .

    LIMIT           reduce using rule 42 (order -> empty .)
    TAIL            reduce using rule 42 (order -> empty .)
    SIMICOLON       reduce using rule 42 (order -> empty .)


state 92

    (54) insert_values -> insert_values COMMA insert_values .
    (54) insert_values -> insert_values . COMMA insert_values

  ! shift/reduce conflict for COMMA resolved as shift
    SIMICOLON       reduce using rule 54 (insert_values -> insert_values COMMA insert_values .)
    COMMA           shift and go to state 81

  ! COMMA           [ reduce using rule 54 (insert_values -> insert_values COMMA insert_values .) ]


state 93

    (53) single_values -> LPAREN values RPAREN .

    SIMICOLON       reduce using rule 53 (single_values -> LPAREN values RPAREN .)
    COMMA           reduce using rule 53 (single_values -> LPAREN values RPAREN .)


state 94

    (51) values -> values COMMA . values
    (51) values -> . values COMMA values
    (52) values -> . value
    (49) value -> . STRING
    (50) value -> . NUMBER
    (27) NUMBER -> . NEGATIVE_INTNUMBER
    (28) NUMBER -> . POSITIVE_INTNUMBER
    (29) NUMBER -> . FLOATNUMBER

    STRING          shift and go to state 64
    NEGATIVE_INTNUMBER shift and go to state 51
    POSITIVE_INTNUMBER shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    values                         shift and go to state 100
    value                          shift and go to state 83
    NUMBER                         shift and go to state 65

state 95

    (6) select -> SELECT distinct select_columns FROM DATASOURCE into where order limit_or_tail . SIMICOLON

    SIMICOLON       shift and go to state 101


state 96

    (46) limit_or_tail -> LIMIT . POSITIVE_INTNUMBER

    POSITIVE_INTNUMBER shift and go to state 102


state 97

    (47) limit_or_tail -> TAIL . POSITIVE_INTNUMBER

    POSITIVE_INTNUMBER shift and go to state 103


state 98

    (48) limit_or_tail -> empty .

    SIMICOLON       reduce using rule 48 (limit_or_tail -> empty .)


state 99

    (41) order -> ORDER BY . column way
    (32) column -> . COLNUMBER
    (33) column -> . BRACKETED_COLNAME
    (34) column -> . SIMPLE_COLNAME

    COLNUMBER       shift and go to state 20
    BRACKETED_COLNAME shift and go to state 21
    SIMPLE_COLNAME  shift and go to state 22

    column                         shift and go to state 104

state 100

    (51) values -> values COMMA values .
    (51) values -> values . COMMA values

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 51 (values -> values COMMA values .)
    COMMA           shift and go to state 94

  ! COMMA           [ reduce using rule 51 (values -> values COMMA values .) ]


state 101

    (6) select -> SELECT distinct select_columns FROM DATASOURCE into where order limit_or_tail SIMICOLON .

    $end            reduce using rule 6 (select -> SELECT distinct select_columns FROM DATASOURCE into where order limit_or_tail SIMICOLON .)


state 102

    (46) limit_or_tail -> LIMIT POSITIVE_INTNUMBER .

    SIMICOLON       reduce using rule 46 (limit_or_tail -> LIMIT POSITIVE_INTNUMBER .)


state 103

    (47) limit_or_tail -> TAIL POSITIVE_INTNUMBER .

    SIMICOLON       reduce using rule 47 (limit_or_tail -> TAIL POSITIVE_INTNUMBER .)


state 104

    (41) order -> ORDER BY column . way
    (43) way -> . ASC
    (44) way -> . empty
    (45) way -> . DESC
    (5) empty -> .

    ASC             shift and go to state 106
    DESC            shift and go to state 108
    LIMIT           reduce using rule 5 (empty -> .)
    TAIL            reduce using rule 5 (empty -> .)
    SIMICOLON       reduce using rule 5 (empty -> .)

    way                            shift and go to state 105
    empty                          shift and go to state 107

state 105

    (41) order -> ORDER BY column way .

    LIMIT           reduce using rule 41 (order -> ORDER BY column way .)
    TAIL            reduce using rule 41 (order -> ORDER BY column way .)
    SIMICOLON       reduce using rule 41 (order -> ORDER BY column way .)


state 106

    (43) way -> ASC .

    LIMIT           reduce using rule 43 (way -> ASC .)
    TAIL            reduce using rule 43 (way -> ASC .)
    SIMICOLON       reduce using rule 43 (way -> ASC .)


state 107

    (44) way -> empty .

    LIMIT           reduce using rule 44 (way -> empty .)
    TAIL            reduce using rule 44 (way -> empty .)
    SIMICOLON       reduce using rule 44 (way -> empty .)


state 108

    (45) way -> DESC .

    LIMIT           reduce using rule 45 (way -> DESC .)
    TAIL            reduce using rule 45 (way -> DESC .)
    SIMICOLON       reduce using rule 45 (way -> DESC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 38 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 92 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 100 resolved as shift
